version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_HOST: kafka
    depends_on:
      - zookeeper
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    ports:
      - '5432:5432'
    networks:
      - app-network

  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    ports:
      - '3000:3000'
    environment:
      KAFKA_BROKER: kafka:9092 # Kafka broker URL for NestJS app
      REDIS_HOST: redis
      # DATABASE_URL: postgresql://postgres:1230@localhost:5432/postgres
      DATABASE_URL: postgresql://postgres:1230@postgres:5432/postgres
    depends_on:
      - kafka
      - redis
      - postgres
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
